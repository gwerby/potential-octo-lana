**ПИПИСИТАРНЫЙ  СОФТ** (агнл. **proprietary software**) — программное обеспечение, распространяемое на правах аренды с **АНАЛЬНЫМИ ОГРАНИЧЕНИЯМИ** действий пользователя. В  противоположность свободному софту, обладает следующими характеристическими и основополагающими свойствами:
— программа — услуга (продается право пользования неким набором бинарных файлов и "техподдержка" согласно EULA);
— пользователь — не владелец, а клиент-потребитель (арендатор);
— компьютер — не контролируемое пользоватем устройство, а поставщик услуг правообладателя.

**МОКРЫЕ ПИСЬКИ** (родств. англ. **scumware**) — пиписитарный софт, монетизируемый за счёт пользователя неявным образом.
Помимо решения задач пользователя, которое являются лишь средством привлечения последнего к использованию данного ПО, оно также выполняет дополнительные действия (являющиеся для правообладателя основными):
— показ рекламы;
— форсированное навязывание покупки "pro"-версий своего продукта;
— навязывание не относящихся к решению задачи услуг (например, поисковых сервисов);
— навязывание партнерских продуктов (сервисов или ПО);
— препятствование смене поставщика услуг (например, установка guard-служб, мешающих изменению настроек);
— сбор личных данных пользователя с целью получения статистики или передачи заинтересованным третьим лицам (обычно для таргетирования рекламы);
— другие способы монетизации.
Подавляющее большинство мокрописек разрабатываются с закрытым исходным кодом единственным человеком, так как при такой модели разработки создать качественное и полезное для пользователя ПО принципиально невозможно (за [i]крайне[/i] редкими исключениями).
Также мокрые письки имеют крайне низкие (часто нулевые) гарантии надежности и безопасности, что всегда прописывается в EULA в разделе отказа от ответственности.

**АНАЛЬНЫЕ  ОГРАНИЧЕНИЯ** (родств. англ. **vendor lock-in**) представляют из себя  монополизацию правообладателем права предоставления, модификации и поддержки ПО, как и связанных с ним форматов/протоколов, а также:
— запрет на исследование ПО пользователем — присутствует практически   всегда, реализуется путём непредоставления доступа к исходному коду, строгими запретами на любое изучение программной логики в бинарном коде (дизассемблирование);
— запрет на копирование — если правообладатель осущестляет это за деньги;
— DRM-ограничения для конечного пользователя (количество установок/количество "легитимных" компьютеров/необходимость в онлайн-аккаунте/etc.);
— искусственные ограничения функционала — для ранжирования одинаковых продуктов по цене;
— и совместимости (патентование и закрытие спецификаций форматов/протоколов, односторонее нарушение стандартов) — для затруднения перехода на аналоги;
— создание искусственной монополиии на продукт/вид продукта, выталкивание альтернатив с рынка;
— ограничение срока поддержки — при монополии на поддержку это работает как принуждение к покупке новой версии.

**ПЕРДОЛИНГ** — неэффективное применение усилий. Это может быть:
— осуществление требующих знаний действий при отсутствии оных;
— многократное ручное выполнение автоматизируемых действий.
В первом случае выливается в кучу ошибок, нередко вообще срывающих выполнение цели. 

**ЮЗЕР-ФРИНДЛИ СОФТ** — программное обеспечение, ориентированное на неграмотного и необучаемого пользователя. Оно терпимо к пердолингу в первом смысле и провоцирует его во втором. Его **ДРУЖЕСТВЕННЫЙ ИНТЕРФЕЙС** неудобен и неэффективен, но прост для освоения, позволяя решать задачи, не вникая в методы их решения.
В  юзер-френдли софт встроено множество подсказок, проверок и  подтверждений, а группы простых действий объединяются в одно сложное,  что существенно затрудняет работу опытного человека.
Сфера  применения (гибкость) юзер-фриндли софта значительно меньше, чем у  программ, не ориентированных на обеспечение совместимости с олигофренией  пользователя, а сложность написания (и в результате —  вероятность  ошибок) — значительно выше.
